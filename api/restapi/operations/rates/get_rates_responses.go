// Code generated by go-swagger; DO NOT EDIT.

package rates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ehabterra/flash_api/api/models"
)

// GetRatesOKCode is the HTTP code returned for type GetRatesOK
const GetRatesOKCode int = 200

/*GetRatesOK Success

swagger:response getRatesOK
*/
type GetRatesOK struct {

	/*
	  In: Body
	*/
	Payload float64 `json:"body,omitempty"`
}

// NewGetRatesOK creates GetRatesOK with default headers values
func NewGetRatesOK() *GetRatesOK {

	return &GetRatesOK{}
}

// WithPayload adds the payload to the get rates o k response
func (o *GetRatesOK) WithPayload(payload float64) *GetRatesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rates o k response
func (o *GetRatesOK) SetPayload(payload float64) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRatesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetRatesDefault generic error response

swagger:response getRatesDefault
*/
type GetRatesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRatesDefault creates GetRatesDefault with default headers values
func NewGetRatesDefault(code int) *GetRatesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRatesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get rates default response
func (o *GetRatesDefault) WithStatusCode(code int) *GetRatesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get rates default response
func (o *GetRatesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get rates default response
func (o *GetRatesDefault) WithPayload(payload *models.Error) *GetRatesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rates default response
func (o *GetRatesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRatesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
